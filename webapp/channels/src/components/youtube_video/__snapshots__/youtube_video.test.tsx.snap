// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`YoutubeVideo should match init snapshot (Shorts) 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <YoutubeVideo
    googleDeveloperKey="googledevkey"
    hasImageProxy={false}
    link="https://www.youtube.com/shorts/2oa5WCUpwD8"
    metadata={
      Object {
        "images": Array [
          Object {
            "secure_url": "linkForThumbnail",
            "url": "linkForThumbnail",
          },
        ],
        "title": "Youtube title",
      }
    }
    postId="post_id_1"
    show={true}
    youtubeReferrerPolicy={false}
  >
    <div
      className="post__embed-container"
    >
      <div>
        <h4>
          <span
            className="video-type"
          >
            YouTube Shorts - 
          </span>
          <span
            className="video-title"
          >
            <ForwardRef
              href="https://www.youtube.com/shorts/2oa5WCUpwD8"
              location="youtube_video"
            >
              <a
                href="https://www.youtube.com/shorts/2oa5WCUpwD8"
                location="youtube_video"
                onClick={[Function]}
                rel="noopener noreferrer"
                target="_blank"
              >
                Youtube title
              </a>
            </ForwardRef>
          </span>
          <WithTooltip
            id="post_id_1_expand_shorts"
            placement="right"
            title="Expand Horizontally"
          >
            <OverlayTrigger
              defaultOverlayShown={false}
              delay={400}
              disabled={false}
              overlay={<Unknown />}
              placement="right"
              trigger={
                Array [
                  "hover",
                  "focus",
                ]
              }
            >
              <OverlayTrigger
                defaultOverlayShown={false}
                delay={400}
                overlay={
                  <OverlayWrapper
                    intl={null}
                  />
                }
                placement="right"
                trigger={
                  Array [
                    "hover",
                    "focus",
                  ]
                }
              >
                <i
                  className="video-expand-shorts"
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onMouseOut={[Function]}
                  onMouseOver={[Function]}
                >
                  <ArrowExpandIcon>
                    <svg
                      fill="currentColor"
                      height="1em"
                      version="1.1"
                      viewBox="0 0 24 24"
                      width="1em"
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <path
                        d="M10,21V19H6.41L10.91,14.5L9.5,13.09L5,17.59V14H3V21H10M14.5,10.91L19,6.41V10H21V3H14V5H17.59L13.09,9.5L14.5,10.91Z"
                      />
                    </svg>
                  </ArrowExpandIcon>
                </i>
              </OverlayTrigger>
            </OverlayTrigger>
          </WithTooltip>
        </h4>
        <div
          className="video-div embed-responsive-item video-shorts"
          onClick={[Function]}
        >
          <div
            className="embed-responsive video-div__placeholder"
          >
            <div
              className="video-thumbnail__container"
            >
              <Connect(Component)
                src="linkForThumbnail"
              >
                <Memo(ExternalImage)
                  dispatch={[Function]}
                  enableSVGs={false}
                  hasImageProxy={false}
                  src="linkForThumbnail"
                >
                  <img
                    alt="youtube video thumbnail"
                    className="video-thumbnail"
                    src="linkForThumbnail"
                  />
                </Memo(ExternalImage)>
              </Connect(Component)>
              <div
                className="block"
              >
                <span
                  className="play-button"
                >
                  <span />
                </span>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </YoutubeVideo>
</Provider>
`;

exports[`YoutubeVideo should match init snapshot 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <YoutubeVideo
    googleDeveloperKey="googledevkey"
    hasImageProxy={false}
    link="https://www.youtube.com/watch?v=xqCoNej8Zxo"
    metadata={
      Object {
        "images": Array [
          Object {
            "secure_url": "linkForThumbnail",
            "url": "linkForThumbnail",
          },
        ],
        "title": "Youtube title",
      }
    }
    postId="post_id_1"
    show={true}
    youtubeReferrerPolicy={false}
  >
    <div
      className="post__embed-container"
    >
      <div>
        <h4>
          <span
            className="video-type"
          >
            YouTube - 
          </span>
          <span
            className="video-title"
          >
            <ForwardRef
              href="https://www.youtube.com/watch?v=xqCoNej8Zxo"
              location="youtube_video"
            >
              <a
                href="https://www.youtube.com/watch?v=xqCoNej8Zxo"
                location="youtube_video"
                onClick={[Function]}
                rel="noopener noreferrer"
                target="_blank"
              >
                Youtube title
              </a>
            </ForwardRef>
          </span>
        </h4>
        <div
          className="video-div embed-responsive-item"
          onClick={[Function]}
        >
          <div
            className="embed-responsive video-div__placeholder"
          >
            <div
              className="video-thumbnail__container"
            >
              <Connect(Component)
                src="linkForThumbnail"
              >
                <Memo(ExternalImage)
                  dispatch={[Function]}
                  enableSVGs={false}
                  hasImageProxy={false}
                  src="linkForThumbnail"
                >
                  <img
                    alt="youtube video thumbnail"
                    className="video-thumbnail"
                    src="linkForThumbnail"
                  />
                </Memo(ExternalImage)>
              </Connect(Component)>
              <div
                className="block"
              >
                <span
                  className="play-button"
                >
                  <span />
                </span>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </YoutubeVideo>
</Provider>
`;

exports[`YoutubeVideo should match snapshot for playing state (Shorts) 1`] = `
<div
  className="post__embed-container"
>
  <div>
    <h4>
      <span
        className="video-type"
      >
        YouTube Shorts - 
      </span>
      <span
        className="video-title"
      >
        <ForwardRef
          href="https://www.youtube.com/shorts/2oa5WCUpwD8"
          location="youtube_video"
        >
          Youtube title
        </ForwardRef>
      </span>
      <WithTooltip
        id="post_id_1_expand_shorts"
        placement="right"
        title="Expand Horizontally"
      >
        <i
          className="video-expand-shorts"
          onClick={[Function]}
        >
          <ArrowExpandIcon />
        </i>
      </WithTooltip>
    </h4>
    <div
      className="video-div embed-responsive-item video-shorts"
      onClick={[Function]}
    >
      <iframe
        allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"
        allowFullScreen={true}
        frameBorder="0"
        height="360px"
        referrerPolicy="no-referrer"
        sandbox="allow-scripts allow-same-origin allow-popups allow-presentation"
        src="https://www.youtube.com/embed/2oa5WCUpwD8?autoplay=1&autohide=1&border=0&wmode=opaque&fs=1&enablejsapi=1"
        title="Youtube title"
        width="480px"
      />
    </div>
  </div>
</div>
`;

exports[`YoutubeVideo should match snapshot for playing state 1`] = `
<div
  className="post__embed-container"
>
  <div>
    <h4>
      <span
        className="video-type"
      >
        YouTube - 
      </span>
      <span
        className="video-title"
      >
        <ForwardRef
          href="https://www.youtube.com/watch?v=xqCoNej8Zxo"
          location="youtube_video"
        >
          Youtube title
        </ForwardRef>
      </span>
    </h4>
    <div
      className="video-div embed-responsive-item"
      onClick={[Function]}
    >
      <iframe
        allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"
        allowFullScreen={true}
        frameBorder="0"
        height="360px"
        referrerPolicy="no-referrer"
        sandbox="allow-scripts allow-same-origin allow-popups allow-presentation"
        src="https://www.youtube.com/embed/xqCoNej8Zxo?autoplay=1&autohide=1&border=0&wmode=opaque&fs=1&enablejsapi=1"
        title="Youtube title"
        width="480px"
      />
    </div>
  </div>
</div>
`;

exports[`YoutubeVideo should match snapshot for playing state and \`youtubeReferrerPolicy = true\` 1`] = `
<div
  className="post__embed-container"
>
  <div>
    <h4>
      <span
        className="video-type"
      >
        YouTube - 
      </span>
      <span
        className="video-title"
      >
        <ForwardRef
          href="https://www.youtube.com/watch?v=xqCoNej8Zxo"
          location="youtube_video"
        >
          Youtube title
        </ForwardRef>
      </span>
    </h4>
    <div
      className="video-div embed-responsive-item"
      onClick={[Function]}
    >
      <iframe
        allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"
        allowFullScreen={true}
        frameBorder="0"
        height="360px"
        referrerPolicy="strict-origin-when-cross-origin"
        sandbox="allow-scripts allow-same-origin allow-popups allow-presentation"
        src="https://www.youtube.com/embed/xqCoNej8Zxo?autoplay=1&autohide=1&border=0&wmode=opaque&fs=1&enablejsapi=1"
        title="Youtube title"
        width="480px"
      />
    </div>
  </div>
</div>
`;

exports[`YoutubeVideo should match snapshot for playing state and shortsExpanded state (Shorts) 1`] = `
<div
  className="post__embed-container"
>
  <div>
    <h4>
      <span
        className="video-type"
      >
        YouTube Shorts - 
      </span>
      <span
        className="video-title"
      >
        <ForwardRef
          href="https://www.youtube.com/shorts/2oa5WCUpwD8"
          location="youtube_video"
        >
          Youtube title
        </ForwardRef>
      </span>
      <WithTooltip
        id="post_id_1_expand_shorts"
        placement="right"
        title="Shrink"
      >
        <i
          className="video-expand-shorts"
          onClick={[Function]}
        >
          <ArrowCollapseIcon />
        </i>
      </WithTooltip>
    </h4>
    <div
      className="video-div embed-responsive-item video-shorts-expanded"
      onClick={[Function]}
    >
      <iframe
        allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"
        allowFullScreen={true}
        frameBorder="0"
        height="360px"
        referrerPolicy="no-referrer"
        sandbox="allow-scripts allow-same-origin allow-popups allow-presentation"
        src="https://www.youtube.com/embed/2oa5WCUpwD8?autoplay=1&autohide=1&border=0&wmode=opaque&fs=1&enablejsapi=1"
        title="Youtube title"
        width="480px"
      />
    </div>
  </div>
</div>
`;
